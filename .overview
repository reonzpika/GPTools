# Project Overview

## Technologies Used
- **Next.js**: A React framework for building server-side rendered and statically generated web applications.
- **Tailwind CSS**: A utility-first CSS framework for rapid UI development.
- **TypeScript**: A statically typed superset of JavaScript.
- **ESLint**: A tool for identifying and fixing problems in JavaScript code.
- **Prettier**: A code formatter.
- **Vitest**: A testing framework.
- **Playwright**: A tool for end-to-end testing.
- **Clerk**: Authentication and user management.
- **DrizzleORM**: A type-safe ORM for PostgreSQL, SQLite, and MySQL.
- **Sentry**: Error monitoring.
- **Pino.js**: Logging.
- **Better Stack**: Log management.
- **Checkly**: Monitoring as code.

## Project Structure
├── README.md # Project documentation
├── .github # GitHub configuration
├── .husky # Husky configuration
├── .storybook # Storybook configuration
├── .vscode # VSCode configuration
├── migrations # Database migrations
├── public # Public assets
├── scripts # Scripts
├── src # Source code
│ ├── app # Next.js App Router
│ ├── components # React components
│ ├── libs # 3rd party libraries configuration
│ ├── locales # Localization files
│ ├── models # Database models
│ ├── styles # Styles
│ ├── templates # Templates
│ ├── types # Type definitions
│ ├── utils # Utility functions
│ └── validations # Validation schemas
├── tests # Tests
│ ├── e2e # End-to-end tests
│ └── integration # Integration tests
├── tailwind.config.js # Tailwind CSS configuration
└── tsconfig.json # TypeScript configuration


## Key Components
- **ConsultationApp**: A complex medical consultation application with features like patient summary input, AI-assisted consultation, differential diagnosis generation, medical resource search, and GP tools.
- **BaseTemplate**: The default theme for the project.
- **AppConfig**: Configuration file for the project.

## Additional Information
- **Authentication Setup**: Create a Clerk account and add the necessary keys to the `.env.local` file.
- **Database Setup**: Configure DrizzleORM for your preferred database.
- **Translation Setup**: Use `next-intl` and Crowdin for localization.
- **Testing**: Use Vitest for unit tests and Playwright for end-to-end tests.